using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using EvolveGames;
using TMPro;

public class NewGun : MonoBehaviour
{
    public float rotationSpeed = 5f;
    private bool isPickedUp = false;
    public GameObject gun1;
    public GameObject gun2;
    public GameObject itemDisplay;
    private ItemChange itemChangeScript;
    private bool isCollided = false;
    public GameObject airdropPrefab;
    public Shotgun shotgunScript;
    private GameObject currentAirDrop;
    public TextMeshProUGUI pickedUpShotgunText;

    private void Start()
    {
        Vector3 fixedPosition = new Vector3(-4.368393f, 1.5f, 10.21f);
        Instantiate(airdropPrefab, fixedPosition, Quaternion.identity);
        InvokeRepeating("SpawnAirdrop", 100f, 100f);
    }

    void SpawnAirdrop()
    {
        if(currentAirDrop != null)
        {
            Destroy(currentAirDrop);
        }
        Vector3 fixedPosition = new Vector3(-4.368393f,3.832181f,10.21f);
        GameObject airdrop = Instantiate(airdropPrefab, fixedPosition, Quaternion.identity);
    }

    // Update is called once per frame
    private void Update()
    {
        if(isCollided)
        {
            TryPickUpGun();
        }

        transform.Rotate(Vector3.up, rotationSpeed * Time.deltaTime);
    }

    private void OnCollisionEnter(Collision collision)
    {
        if (collision.gameObject.CompareTag("Player"))
        {
            Debug.Log("Collided");
            isCollided = true;
            shotgunScript.AddBullets(5);

            pickedUpShotgunText.text = "Picked Up Shotgun";
            StartCoroutine(ClearMessageAfterDelay());
        }
    }

    IEnumerator ClearMessageAfterDelay()
    {
        yield return new WaitForSeconds(1.5f);
        pickedUpShotgunText.text = " ";
    }


    public void TryPickUpGun()
    {
        if (!isPickedUp)
        {
           
            MeshRenderer meshRendedrer = GetComponent<MeshRenderer>();
            if(meshRendedrer != null)
            {
                meshRendedrer.enabled = false;
            }

            BoxCollider boxCollider = GetComponent<BoxCollider>();
            if(boxCollider != null)
            {
                boxCollider.enabled = false;
            }
            gun1.SetActive(false); 
            gun2.SetActive(true);

            itemChangeScript = FindObjectOfType<ItemChange>();
            if (itemChangeScript != null)
            {
                itemChangeScript.InitializeGuns(gun1, gun2);
            }
                isPickedUp = true;

        }
    }
}
